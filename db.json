[
    {
      "name": "Creating A Window",
      "path": "builds/window_creation",
      "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/creating_window.c",
      "tags": ["cgl", "basics", "window", "simple"],
      "views": 123,
      "description": "A project to show how to create a basic window.",
      "image": "builds/window_creation/thumb.png",
      "published_date": "2024-02-01",
      "author": "Jaysmito101",
      "difficulty": 2
    },
    {
      "name": "2D Collision Detection",
      "path": "builds/2d_collision_detection",
      "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/2d_collision_detection.c",
      "tags": ["cgl", "2d", "collision", "sat", "gjk", "physics"],
      "views": 456,
      "description": "A project to show how to implement 2D collision detection using SAT and GJK algorithms.",
      "image": "builds/2d_collision_detection/thumb.png",
      "published_date": "2024-02-01",
      "author": "Jaysmito101",
      "difficulty": 4
    },
    {
      "name": "2D Procedural Trees",
      "path": "builds/2d_procedural_trees",
      "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/2d_procedural_trees.c",
      "tags": ["cgl", "2d", "procedural", "creative", "trees"],
      "views": 789,
      "description": "An Interactive application to procedurally generate 2D trees.",
      "image": "builds/2d_procedural_trees/thumb.png",
      "published_date": "2024-02-01",
      "author": "Jaysmito101",
      "difficulty": 4
    },
    {
      "name": "3D Maze Game",
      "path": "builds/3d_maze_game",
      "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/3d_maze_game.c",
      "tags": ["3d", "maze", "algorithm", "creative", "game", "procedural"],
      "views": 321,
      "description": "A 3D maze game with procedurally generated levels.",
      "image": "builds/3d_maze_game/thumb.png",
      "published_date": "2024-02-01",
      "author": "Jaysmito101",
      "difficulty": 3,
      "youtube": "https://www.youtube.com/shorts/QNfG7SoRcog"
    },
    {
        "name": "3D Pipes",
        "path": "builds/3d_pipes",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/3d_pipes.c",
        "tags": ["3d", "pipes", "oldschool", "windows", "screensaver", "creative"],
        "views": 121,
        "description": "The 3D pipes screensaver from old windows versions.",
        "image": "builds/3d_pipes/thumb.png",
        "published_date": "2024-02-01",
        "author": "s-mackeo",
        "difficulty": 4
    },
    {
        "name": "3D Widgets",
        "path": "builds/3d_widgets",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/3d_widgets.c",
        "tags": ["3d", "widgets", "simple", "creative", "tutorial"],
        "views": 121,
        "description": "A simple example of how to render 3D meshes using CGL widgets API.",
        "image": "builds/3d_widgets/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 1
    },
    {
        "name": "Advanced Widgets",
        "path": "builds/advanced_widgets",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/advanced_widgets.c",
        "tags": ["cgl", "advanced", "widgets", "creative", "tutorial"],
        "views": 121,
        "description": "An example of some advanced usage of the CGL widgets API.",
        "image": "builds/advanced_widgets/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 2
    },
    {
        "name": "Approximating Pi",
        "path": "builds/approximating_pi",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/approximating_pi.c",
        "tags": ["cgl", "math", "monte carlo", "pi", "creative", "tutorial"],
        "views": 121,
        "description": "A creative coding and interesting mathematical challenge to approximate pi using monte carlo method.",
        "image": "builds/approximating_pi/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 2
    },
    {
        "name": "Audio Visualizer",
        "path": "builds/audio_visualizer",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/audio_visualizer.c",
        "tags": ["cgl", "audio", "visualizer", "creative", "tutorial"],
        "views": 121,
        "description": "An creative application that visualized a audio file using brilliant looking visuals.",
        "image": "builds/audio_visualizer/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 3
    },
    {
        "name": "Barnsley Fern",
        "path": "builds/barnsley_fern",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/barnsley_fern.c",
        "tags": ["cgl", "math", "fractal", "fern", "creative", "tutorial"],
        "views": 121,
        "description": "An example of how to render the barnsley fern fractal using CGL.",
        "image": "builds/barnsley_fern/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 2
    },
    {
        "name": "Basic Node Editor",
        "path": "builds/basic_node_editor",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/basic_node_editor.c",
        "tags": ["cgl", "node_editor", "simple", "creative", "tutorial"],
        "views": 121,
        "description": "A simple example of how to create a basic node editor using CGL's node editor API.",
        "image": "builds/basic_node_editor/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 5
    },
    {
        "name": "Basic Plotting",
        "path": "builds/basic_plotting",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/basic_plotting.c",
        "tags": ["cgl", "math", "plotting", "simple", "creative", "tutorial"],
        "views": 121,
        "description": "A simple example of how to use CGL's plotting API to plot graphs, curves, chats, scatter plots.",
        "image": "builds/basic_plotting/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 2
    },
    {
        "name": "Basic Raycast 2D Lighting",
        "path": "builds/basic_raycast_2d_lighting",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/basic_raycast_2d_lighting.c",
        "tags": ["cgl", "2d", "raycast", "lighting", "creative", "tutorial"],
        "views": 121,
        "description": "A simple example of how to use CGL's 2D raycasting API to create a 2D lighting system.",
        "image": "builds/basic_raycast_2d_lighting/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 4
    },
    {
        "name": "Bezier Curve Widget",
        "path": "builds/bezier_curve_widget",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/bezier_curve_widget.c",
        "tags": ["cgl", "bezier", "curve", "widget", "creative", "tutorial"],
        "views": 121,
        "description": "A special widget called a Curve Editor that gives an interactive experience of the cgl bezier_curve_widget API.",
        "image": "builds/bezier_curve_widget/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 2
    },
    {
        "name": "Christmas Tree",
        "path": "builds/christmas_tree01",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/christmas_tree01.c",
        "tags": ["cgl", "christmas", "tree", "creative", "tutorial"],
        "views": 121,
        "description": "A creative coding example of a christmas tree using CGL.",
        "image": "builds/christmas_tree01/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 2
    },
    {
        "name": "Climate Spiral",
        "path": "builds/climate_spiral",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/climate_spiral.c",
        "tags": ["cgl", "climate", "spiral", "creative", "tutorial"],
        "views": 121,
        "description": "A creative coding example of a climate spiral that visualizes the change in temperature over time from 1880 to 2023.",
        "image": "builds/climate_spiral/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 2
    },
    {
        "name": "Fireworks",
        "path": "builds/fireworks",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/fireworks.c",
        "tags": ["cgl", "fireworks", "creative", "tutorial"],
        "views": 121,
        "description": "A creative coding example of a fireworks simulation using CGL.",
        "image": "builds/fireworks/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 2
    },
    {
        "name": "Flappy Bird",
        "path": "builds/flappy_bird",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/flappy_bird.c",
        "tags": ["cgl", "flappy", "bird", "game", "creative", "tutorial"],
        "views": 121,
        "description": "A creative coding example of a flappy bird game using CGL.",
        "image": "builds/flappy_bird/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 3
    },
    { 
        "name": "Flappy Bird AI",
        "path": "builds/flappy_bird_ai",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/flappy_bird_ai.c",
        "tags": ["cgl", "flappy", "bird", "game", "ai", "neural network", "genetic algorithm", "creative", "tutorial"],
        "views": 121,
        "description": "A creative coding example of a flappy bird game using CGL with AI (neural networks trained with genetic algorithms).",
        "image": "builds/flappy_bird_ai/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 5
    },
    {
        "name": "Interactive 2D Triangulation",
        "path": "builds/interactive_2d_triangulation",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/interactive_2d_triangulation.c",
        "tags": ["cgl", "2d", "triangulation", "interactive", "creative", "tutorial"],
        "views": 121,
        "description": "An interactive example of how to use CGL's 2D triangulation API to create a 2D triangulation system.",
        "image": "builds/interactive_2d_triangulation/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 3
    },
    {
        "name": "Interactive Content Aware Crop",
        "path": "builds/interactive_content_aware_crop",
        "source_code": "https://github.com/Jaysmito101/cgl/blob/main/examples/c/interactive_content_aware_crop.c",
        "tags": ["cgl", "interactive", "content aware", "crop", "creative", "tutorial"],
        "views": 121,
        "description": "An interactive example of how to use CGL's content aware crop API to create a content aware crop system.",
        "image": "builds/interactive_content_aware_crop/thumb.png",
        "published_date": "2024-02-01",
        "author": "Jaysmito101",
        "difficulty": 5
    }

]
